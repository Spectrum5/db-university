1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia (68)
SELECT `students`.* 
FROM `students`
INNER JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = "Corso di Laurea in Economia";


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
SELECT `degrees`.* 
FROM `degrees`
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = "Dipartimento di Neuroscienze" 
AND `degrees`.`level` = "magistrale";


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT `courses`.`name`, `courses`.`period`,`courses`.`year`,`courses`.`cfu`, `courses`.`website`, `course_teacher`.`teacher_id` AS 'ID Insegnante'
FROM `course_teacher`
INNER JOIN `courses`
ON `course_teacher`.`course_id` = `courses`.`id`
WHERE `teacher_id` = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
SELECT `students`.`name` AS `nome studente`, `students`.`surname` AS `cognome studente`,`degrees`.`name` AS `corso di laurea`, `departments`.`name` AS `dipartimento`, `students`.`registration_number` AS 'Matricola'
FROM `students`
INNER JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`  
ORDER BY `students`.`surname`,`students`.`name`;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT `degrees`.`name` AS `corso di laurea`, `courses`.`name` AS `corso`, `teachers`.`name` AS `nome insegnante`, `teachers`.`surname` AS `cognome insegnante`
FROM `courses`
INNER JOIN `degrees`
ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `course_teacher`
ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers`
ON `teacher_id` = `teachers`.`id`
ORDER BY `degrees`.`name`;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
SELECT DISTINCT `teachers`.`name` AS `nome_docente`, `teachers`.`surname` AS `cognome_docente`, `departments`.`name` AS `dipartimento`
FROM `teachers`
INNER JOIN `course_teacher`
ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses`
ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees`
ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `departments` 
ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica';


7. BONUS: Selezionare per ogni studente quanti tentativi d’esame ha sostenuto per
superare ciascuno dei suoi esami
SELECT CONCAT(student.name,' ', student.surname) AS `Studente`, course.name AS `Corso`, COUNT(*) AS `Tentativi`, MAX(xs.vote) AS `voto_massimo`
FROM students AS `student`
INNER JOIN exam_student AS `xs` 
ON student.id = xs.student_id
INNER JOIN exams AS `x` 
ON xs.exam_id = x.id 
INNER JOIN courses AS `course` 
ON x.course_id = course.id 
GROUP BY student.id, course.id
HAVING `voto_massimo` >= 18;


*******************************************************************************
                          esempi JOIN  lezione
*******************************************************************************

1. Selezionare tutti i corsi del Corso di Laurea in Informatica (22)
SELECT *
FROM `courses`
INNER JOIN `degrees`
ON `courses`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea in Informatica';

2. Selezionare le informazioni sul corso con id = 144, con tutti i relativi appelli d’esame
SELECT *
FROM `courses`
INNER JOIN `exams`
ON `courses`.`id` = `exams`.`course_id`
WHERE `courses`.`id` = 144;

3. Selezionare a quale dipartimento appartiene il Corso di Laurea in Diritto dell'Economia (Dipartimento di Scienze politiche, giuridiche e studi internazionali)
SELECT *
FROM `departments`
INNER JOIN `degrees`
ON `departments`.`id` = `degrees`.`department_id`
WHERE `degrees`.`name` = "Corso di Laurea in Diritto dell'Economia";

4. Selezionare tutti gli appelli d'esame del Corso di Laurea Magistrale in Fisica del primo anno
SELECT *
FROM `exams`
INNER JOIN `courses`
ON `exams`.`course_id` = `courses`.`id`
INNER JOIN `degrees`
ON `courses`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea Magistrale in Fisica'
AND `courses`.`year` = 1;

5. Selezionare tutti i docenti che insegnano nel Corso di Laurea in Lettere (21)
SELECT DISTINCT `teachers`.*, degrees.name
FROM `teachers`
INNER JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
INNER JOIN courses
ON course_teacher.course_id = courses.id
INNER JOIN degrees
ON courses.degree_id = degrees.id
WHERE degrees.name = 'Corso di Laurea in Lettere'
ORDER BY teachers.id;

6. Selezionare il libretto universitario di Mirco Messina (matricola n. 620320)
SELECT students.surname, exam_student.exam_id, exam_student.vote, exams.hour, exams.date
FROM `students`
INNER JOIN exam_student
ON students.id = exam_student.student_id
INNER JOIN exams
ON exam_student.exam_id = exams.id
WHERE students.surname = 'Messina'
AND students.name = 'Mirco'
AND exam_student.vote >= 18;

Versione con nome esame:
SELECT students.surname, courses.name, exam_student.vote, exams.hour, exams.date
FROM `students`
INNER JOIN exam_student
ON students.id = exam_student.student_id
INNER JOIN exams
ON exam_student.exam_id = exams.id
INNER JOIN courses
ON exams.course_id = courses.id
WHERE students.surname = 'Messina'
AND students.name = 'Mirco'
AND exam_student.vote >= 18;

7. Selezionare il voto medio di superamento d'esame per ogni corso, con anche i dati del corso di laurea associato, ordinati per media voto decrescente
SELECT courses.id, courses.name, courses.period, courses.year, courses.cfu, degrees.name AS corso_di_laurea, AVG(exam_student.vote) AS avg_vote
FROM `courses`
INNER JOIN exams
ON courses.id = exams.course_id
INNER JOIN exam_student
ON exams.id = exam_student.exam_id
INNER JOIN degrees
ON courses.degree_id = degrees.id
WHERE exam_student.vote >= 18
GROUP BY courses.id, courses.name, courses.period, courses.year, courses.cfu, corso_di_laurea;
